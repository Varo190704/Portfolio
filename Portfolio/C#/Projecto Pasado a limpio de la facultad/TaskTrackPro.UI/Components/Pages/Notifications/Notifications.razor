@page "/notifications"

@using System.ComponentModel.DataAnnotations
@inject IAlertManager AlertManager
@inject IUserManager UserManager

<PageTitle>Alertas</PageTitle>

<h3>Notificaciones</h3>

@if (UserManager.getUserByName("admin@sistema.com").login)
{
    <EditForm Model="@newAlert" OnValidSubmit="CreateAlert">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
        <label class="form-label">Descripción de la Alert</label>
        <InputTextArea class="form-control" @bind-Value="newAlert.Description" maxlength="400" />
        </div>
        
        <InputSelect class="form-select" @bind-Value="newAlert.UserEmail">
            <option value="non">-- elige un Usuario --</option>
            @foreach (User t in Users)
            {
                <option value="@t.Email">@t.Email</option>
            }
        </InputSelect>
        
        <button type="submit" class="btn btn-success">Crear Proyecto</button>
        
    </EditForm>
}
@if(alerts.Count > 0)
{
    <br>
    <div class="list-group mb-4">
        <div class="card p-3">
            <h3>Alertas Existentes</h3>
            @foreach (Alert p in alerts)
            {
                if (UserManager.getUserByName(p.Email).login || UserManager.getUserByName("admin@sistema.com").login)
                {
                    
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@p.Message</span>
                        <button class="btn btn-sm btn-outline-primary" @onclick="() => DeleteAlert(p)">Borrar</button>
                    </div>
                }
            }
        </div>
    </div> 
}

@code {
    private List<Alert> alerts;
    private AlertViewModel newAlert = new();
    private List<User> Users;

    protected override void OnInitialized()
    {
        alerts = AlertManager.getAllAlerts().ToList();
        Users = UserManager.getAllUsers().ToList();
    }
    
    private void CreateAlert()
    {
        string desc = newAlert.Description;
        int id;
        if (alerts.Count > 0)
        {
            id = alerts.Count+1;
            Alert last = alerts[alerts.Count - 1];
        }
        else
        {
            id = 1;
        }
        Alert alert = new Alert(desc, id, newAlert.UserEmail);
        AlertManager.createAlert(alert);
        alerts = AlertManager.getAllAlerts().ToList();
        newAlert = new AlertViewModel();
    }

    public void DeleteAlert(Alert a)
    {
        AlertManager.deleteAlert(a);
        alerts = AlertManager.getAllAlerts().ToList();
    }
    
    public class AlertViewModel
    {
        [Required(ErrorMessage = "La descripción es obligatoria.")]
        public string Description { get; set; }
        
        [Required(ErrorMessage = "Selecciona un tipo.")]
        [NotNon(ErrorMessage = "No es válido tu selección")]
        public string UserEmail { get; set; }
    }
}